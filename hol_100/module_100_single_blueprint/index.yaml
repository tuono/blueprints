#
<<<<<<< HEAD:Workshop.yml
# Tuono IaC Workshop
#
=======
# Tuono Hands-On Lab 
# HOL-100
>>>>>>> b482f54919a8dc41d6ed4561c5f13e2537232413:HOL_100_Webserver.yml
#
---
location:
  region:
    hands-on-lab-region:
      aws: us-west-2
      azure: westus2
  folder:
    (( resource_group )):
<<<<<<< HEAD:Workshop.yml
      region: workshop-region
=======
      region: hands-on-lab-region
>>>>>>> b482f54919a8dc41d6ed4561c5f13e2537232413:HOL_100_Webserver.yml


networking:
  network:
    vnet-(( resource_group )):
      range: 10.0.0.0/16
      scope: public

  subnet:
    subnet-walkthrough:
      range: 10.0.0.0/24
      network: vnet-(( resource_group ))
      scope: public
      firewall: fw-external-access

  protocol:
    web-server:
      ports:
        - port: 22
          proto: tcp
        - port: 80
          proto: tcp
    ping:
      ports:
        - proto: icmp

  firewall:
    fw-external-access:
      rules:
        - protocols: web-server
          to: self
        - protocols: ping
          to: self


compute:
  image:
    bionic:
      publisher: Canonical
      product: UbuntuServer
      sku: 18.04-LTS
      venue:
        aws:
          image_id: ami-04bb0cc469b2b81cc

  vm:
    webserver:
      cores: 1
      memory: 1 GB
      image: bionic
      nics:
        external:
          ips:
            - private:
                type: dynamic
              public:
                type: static
          firewall: fw-external-access
          subnet: subnet-walkthrough
<<<<<<< HEAD:Workshop.yml
      #disks:
      #  data:
      #    size: 128 GB
=======
      # disks:
      #   data:
      #     size: 128 GB
>>>>>>> b482f54919a8dc41d6ed4561c5f13e2537232413:HOL_100_Webserver.yml
      configure:
        admin:
          username: (( admin_username ))
          public_key: (( admin_public_key ))
        userdata:
          type: cloud-init
          content: |
            #cloud-config
            package_upgrade: false
            packages:
              - nginx
            users:
              - name: (( admin_username ))
                groups:
                  - sudo
                sudo: ALL=(ALL) NOPASSWD:ALL
                ssh_authorized_keys:
                  - (( admin_public_key ))
            runcmd:
              - sudo su
              - echo '(( your_caption ))' > /var/www/html/index.nginx-debian.html


variables:
  admin_username:
    description: The username for the administrative user.
    type: string
    default: adminuser
  admin_public_key:
    description: The OpenSSH Public Key to use for administrative access.
    type: string
    default: ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQDDummyDummyDummyDummyDummyDummyDummyDummyDummyDummyDummyDummyDummyDummyDummyDummyDummyDummyDummyDummyDummyDummyDummyDummyDummyDummyDummyDummyDummyDummyDummyDummyDummyDummyDummyDummyDummyDummyDummyDummyDummyDummyDummyDummyDummyDummyDummyDummyDummyDummyDummyDummyDummyDummyDummyDummyDummyDummyDummyDummyDummyDummyDummyDummyDummyDummyDummyDummyDummyDummyDummyDummyDummyDummyDummyDummyDummyDummyDummyDummyDummyDummyDummyDummyDummyDummyDummyDummyDummyDummyDummyDummyDummyDummyDummyDummyDummyDummyDummyDummyDummyDummyDu= dummy_key@tuono.com
  your_caption:
    description: Web server message
    type: string
    default: "Congratulations on configuring a web server!"
  resource_group:
    description: Name of your dedicated Resource Group
    type: string
